name: Build and Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  BUILD_NUMBER: ${{ github.run_number }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn clean package

      - name: Retrieve Project Name & Version
        id: project-info
        run: |
          echo "projectName=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.name}' --non-recursive exec:exec)" >> $GITHUB_ENV
          echo "projectVersion=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          release_name: Release ${{ env.projectVersion }} build-${{ github.run_number }}
          body: ${{ join(github.event.commits.*.message, ' || ') }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ env.projectName }}-${{ env.projectVersion }}.jar
          asset_name: ${{ env.projectName }}-${{ env.projectVersion }}.jar
          asset_content_type: application/java-archive
